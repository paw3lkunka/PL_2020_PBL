objectModule.newEntity(4, "Camera");
{
    auto c = objectModule.newEmptyComponentForLastEntity<Camera>();
        ViewFrustum& frustum = c->getFrustumModifiable();
            frustum.farPlane = 2500.0f;
            frustum.nearPlane = 0.1f;
            frustum.fieldOfView = 80.0f;
            frustum.aspectRatio = (float)GetCore().windowWidth / (float)GetCore().windowHeight;
        c->getProjectionModeModifiable() = CameraProjection::Perspective;

    
    auto t = objectModule.newEmptyComponentForLastEntity<Transform>();
        t->getLocalPositionModifiable() = glm::vec3(0.0f, 0.0f, 0.0f);
        t->setParent(&sceneModule.rootNode);

    auto li = objectModule.newEmptyComponentForLastEntity<AudioListener>();
        li->getGainModifiable() = 0.5f;
        li->getVelocityModifiable();
        li->getPositionModifiable();
        li->getAtModifiable();
        li->getUpModifiable();
}

objectModule.newEntity(2, "RiverFlow");
{
    auto t = objectModule.newEmptyComponentForLastEntity<Transform>();
        t->getLocalPositionModifiable() = glm::vec3(0.0f, 0.0f, 0.0f);
        t->setParent(&sceneModule.rootNode);
    auto so3 = objectModule.newEmptyComponentForLastEntity<AudioSource>();
        so3->audioClip = "Resources/Audios/river.wav";
        so3->getIsRelativeModifiable() = true;
        so3->getGainModifiable() = 0.3f;
        so3->getIsLoopingModifiable() = true;
        so3->autoPlay = true;
}

TextureCreateInfo info = {};
info.format = GL_RGBA;
info.generateMipmaps = false;
info.magFilter = GL_LINEAR;
info.minFilter = GL_LINEAR;
info.wrapMode = GL_CLAMP_TO_EDGE;

auto uiShader = objectModule.newShader("UiStandard", "Resources/Shaders/UiStandard/UiStandard.vert", "Resources/Shaders/UiStandard/UiStandard.frag");
auto josefin = objectModule.newFont("Resources/Fonts/JosefinSans-Regular.ttf", 128, "JosefinSans-Regular");
auto courier = objectModule.newFont("Resources/Fonts/CourierNew.ttf", 128, "CourierNew");
auto textShader = objectModule.newShader("TextStandard", "Resources/Shaders/TextStandard/TextStandard.vert", "Resources/Shaders/TextStandard/TextStandard.frag");
auto rect_2_1 = objectModule.newTexture("Resources/Sprites/rect_2_1.png", info);
auto rect_16_9 = objectModule.newTexture("Resources/Sprites/rect_16_9.png", info);
auto cargo_button_b = objectModule.newTexture("Resources/Sprites/cargo_button_border.png", info);
auto cargo_button_i = objectModule.newTexture("Resources/Sprites/cargo_button_inside.png", info);
auto paperTex = objectModule.newTexture("Resources/Sprites/paper.png", info);
auto rect_border = objectModule.newTexture("Resources/Sprites/rect_border.png", info);
auto textMaterial = objectModule.newMaterial(textShader, "TextMaterial", RenderType::Transparent);
    textMaterial->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
auto redTextMaterial = objectModule.newMaterial(textShader, "TedTextMaterial", RenderType::Transparent);
    redTextMaterial->setVec4("color", {0.717f, 0.082f, 0.082f, 1.0f});

{
    glm::vec4 baseColorOn = {0.196f, 0.674f, 0.082f, 0.8f};
    glm::vec4 highlightedColorOn = {0.250f, 0.870f, 0.105f, 0.8f};
    glm::vec4 onClickColorOn = {0.117f, 0.384f, 0.054f, 0.8f};

    glm::vec4 baseColorOff = {0.0f, 0.0f, 0.0f, 0.8f};
    glm::vec4 highlightedColorOff = {0.360f, 0.360f, 0.360f, 0.8f};
    glm::vec4 onClickColorOff = {0.501f, 0.501f, 0.501f, 0.8f};

    glm::vec4 inactiveColor = {0.0f, 0.0f, 0.0f, 0.8f};

    glm::vec2 textScale = {0.25f, 0.25f};


    objectModule.newEntity(2, "Ui_Menu_Background");
    {
        auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
            rt->getAnchorModifiable() = {0.5f, 0.5f};
            rt->getSizeModifiable() = {1920, 1080};
            uiModule.rootNodes.push_back(rt);

        auto ui = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
            auto mat = objectModule.newMaterial(uiShader, "UiBg", RenderType::Opaque);
            mat->setTexture("sprite", paperTex);
            mat->setVec4("color", {1.0f, 1.0f, 1.0f, 1.0f});
            ui->material = mat;
    }

    objectModule.newEntity(2, "SelectCargoText");
    {
        auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
            crt->getSizeModifiable() = {0.35f, 0.35f};
            crt->getAnchorModifiable() = {0.5f, 1.0f};
            crt->getLocalPositionModifiable() = {-142.0f, -48.0f};
            uiModule.rootNodes.push_back(crt);

        auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
            cui->material = textMaterial;
            cui->mesh.font = josefin;
            cui->mesh.text = "Select Cargo:";
    }

    objectModule.newEntity(2, "AdditionalInfoText");
    {
        auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
            crt->getSizeModifiable() = {0.2f, 0.2f};
            crt->getAnchorModifiable() = {0.5f, 1.0f};
            crt->getLocalPositionModifiable() = {-199.0f, -82.0f};
            uiModule.rootNodes.push_back(crt);

        auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
            cui->material = redTextMaterial;
            cui->mesh.font = josefin;
            cui->mesh.text = "You need to add at least one cargo:";
    }

    objectModule.newEntity(3, "Play_Button");
{
    auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
        rt->getLocalPositionModifiable() = {11, -292};
        rt->getAnchorModifiable() = {0.5f, 0.5f};
        rt->getLocalRotationModifiable() = glm::radians(-5.0f);
        rt->getSizeModifiable() = {250.0f, 100.0f};
        uiModule.rootNodes.push_back(rt);

    auto ui = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
        auto buttMaterial = objectModule.newMaterial(uiShader, "optionsMat", RenderType::Transparent);
        buttMaterial->setTexture("sprite", rect_border);
        buttMaterial->setVec4("color", {1.0f, 0.0f, 1.0f, 0.5f});
        ui->material = buttMaterial;
    
    auto butt = objectModule.newEmptyComponentForLastEntity<Button>();
        butt->baseColor = {0.733f, 0.066f, 0.066f, 1.0f};
        butt->highlightedColor = {0.858f, 0.078f, 0.078f, 1.0f};
        butt->inactiveColor = {0.0f, 0.0f, 0.0f, 1.0f};
        butt->onClickColor = {0.654f, 0.066f, 0.066f, 1.0f};
        butt->onClickEvents.push_back(Message(Event::LOAD_SCENE, Scenes::gameScene));
        butt->isActive = false;

    objectModule.newEntity(2, "Play_Button_Text");
    {
        auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
            crt->getLocalPositionModifiable() = {-61.0f, -15.0f};
            crt->getSizeModifiable() = {0.4f, 0.4f};
            crt->setParent(rt);

        auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
            cui->material = objectModule.newMaterial(textShader, "Stamp", RenderType::Transparent);
                cui->material->setVec4("color", {0.733f, 0.066f, 0.066f, 1.0f});
            cui->mesh.font = courier;
            cui->mesh.text = "PLAY";
    }
}

auto bgBlack = objectModule.newMaterial(uiShader, "BgBlack", RenderType::Transparent);
    bgBlack->setVec4("color", {0.0f, 0.0f, 0.0f, 0.8f});
    bgBlack->setTexture("sprite", cargo_button_i);

    {        
        {   //cargo button 1
            objectModule.newEntity(4, "CargoButton1");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {-350, 240};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_1", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton1Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo1Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-135.0f, 31.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo1NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo1Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-9.0f, -0.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo1Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-4.0f, -38.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 2
            objectModule.newEntity(4, "CargoButton2");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {0, 240};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_2", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton2Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo2Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-133.0f, 29.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo2NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo2Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-10.0f, -3.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo2Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-5.0f, -40.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 3
            objectModule.newEntity(4, "CargoButton3");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {350, 240};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_3", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton3Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo3Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-132.0f, 31.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo3NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo3Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-7.0f, 1.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo3Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-1.0f, -37.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 4
            objectModule.newEntity(4, "CargoButton4");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {-350, 40};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_4", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton4Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo4Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-133.0f, 33.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo4NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo4Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-6.0f, 3.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo4Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-7.0f, -35.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 5
            objectModule.newEntity(4, "CargoButton5");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {0, 40};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_5", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton5Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo5Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-124.0f, 33.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo5NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo5Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-8.0f, 0.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo5Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-2.0f, -37.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 6
            objectModule.newEntity(4, "CargoButton6");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {350, 40};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_6", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton6Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo6Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-135.0f, 34.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo6NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo6Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-3.0f, 0.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo6Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {2.0f, -35.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 7
            objectModule.newEntity(4, "CargoButton7");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {-350, -160};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_7", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton7Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo7Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-120.0f, 38.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo7NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo7Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {5.0f, -3.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo7Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-1.0f, -39.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 8
            objectModule.newEntity(4, "CargoButton8");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {0, -160};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_8", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton8Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo8Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-132.0f, 38.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo8NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo8Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-11.0f, 5.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo8Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-12.0f, -37.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }

        {   //cargo button 9
            objectModule.newEntity(4, "CargoButton9");
            auto rt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                rt->getSizeModifiable() = {300, 150};
                rt->getLocalPositionModifiable() = {350, -160};
                rt->getAnchorModifiable() = {0.5f, 0.5f};
                uiModule.rootNodes.push_back(rt);
            auto tb = objectModule.newEmptyComponentForLastEntity<CargoButton>();
                tb->baseColorOn = baseColorOn;
                tb->highlightedColorOn = highlightedColorOn;
                tb->onClickColorOn = onClickColorOn;

                tb->baseColorOff = baseColorOff;
                tb->highlightedColorOff= highlightedColorOff;
                tb->onClickColorOff = onClickColorOff;

                tb->inactiveColor = inactiveColor;
            {
                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = objectModule.newMaterial(uiShader, "Toggle_9", RenderType::Transparent);
                uiR->material->setTexture("sprite", cargo_button_b);
            }

            objectModule.newEntity(2, "CargoButton9Inside");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                crt->getSizeModifiable() = {300, 150};
                crt->setParent(rt);

                auto uiR = objectModule.newEmptyComponentForLastEntity<UiRenderer>();
                uiR->material = bgBlack;
            }
            
            objectModule.newEntity(2, "Cargo9Name");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {-130.0f, 30.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = objectModule.newMaterial(textShader, "Cargo9NameMat", RenderType::Transparent);
                    cui->material->setVec4("color", {0.0f, 0.0f, 0.0f, 1.0f});
                    cui->mesh.font = courier;
                    cui->mesh.text = "Name";

                tb->nameText = cui;
            }
            
            objectModule.newEntity(2, "Cargo9Income");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {0.0f, 0.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Income";
                tb->incomeText = cui;
            }

            objectModule.newEntity(2, "Cargo9Weight");
            {
                auto crt = objectModule.newEmptyComponentForLastEntity<RectTransform>();
                    crt->getSizeModifiable() = textScale;
                    crt->getLocalPositionModifiable() = {5.0f, -31.0f};
                    crt->setParent(rt);

                auto cui = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
                    cui->material = textMaterial;
                    cui->mesh.font = courier;
                    cui->mesh.text = "Weight";

                tb->weightText = cui;
            }
        }
    }
}

auto cargoStorage = objectModule.newEntity(1, "CargoStorage");
{
    objectModule.newEmptyComponentForLastEntity<CargoStorage>();
}

Core::cargoStorageSystem.init(cargoStorage->getComponentPtr<CargoStorage>());

objectModule.newEntity(2, "WeightSumText");
{
    auto tr = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
    tr->material = textMaterial;
    tr->mesh.font = josefin;
    tr->mesh.text = "Total weight:";

    auto rect = objectModule.newEmptyComponentForLastEntity<RectTransform>();
        uiModule.rootNodes.push_back(rect);
        rect->getAnchorModifiable() = {0.0f, 0.5f};
        rect->getLocalPositionModifiable() = {45, 145};
        rect->getSizeModifiable() = {0.3f, 0.3f};
}

auto weight = objectModule.newEntity(2, "AllWeightText");
{
    auto tr = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
    tr->material = textMaterial;
    tr->mesh.font = courier;
    tr->mesh.text = "0.00kg";

    auto rect = objectModule.newEmptyComponentForLastEntity<RectTransform>();
        uiModule.rootNodes.push_back(rect);
        rect->getAnchorModifiable() = {0.0f, 0.5f};
        rect->getLocalPositionModifiable() = {55, 98};
        rect->getSizeModifiable() = {0.3f, 0.3f};
}

auto group = objectModule.newEntity(2, "group1");
{
    auto rect = objectModule.newEmptyComponentForLastEntity<RectTransform>();
        uiModule.rootNodes.push_back(rect);
        rect->getAnchorModifiable() = {0.5f, 0.0f};
    auto group = objectModule.newEmptyComponentForLastEntity<UiSortingGroup>();
        group->groupTransparency = 0.0f;
}

{
    auto redtext = objectModule.newMaterial(textShader, "RedText", RenderType::Transparent);
        redtext->setVec4("color", {0.717f, 0.082f, 0.082f, 1.0f});
    objectModule.newEntity(2, "OverweightedText");
    {
        auto tr = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
        tr->material = redtext;
        tr->mesh.font = courier;
        tr->mesh.text = "Kayak is overweighted. You can take more, but for your own risk!";

        auto rect = objectModule.newEmptyComponentForLastEntity<RectTransform>();
            rect->setParent(group->getComponentPtr<RectTransform>());
            rect->getAnchorModifiable() = {0.0f, 0.5f};
            rect->getLocalPositionModifiable() = {-502, 30};
            rect->getSizeModifiable() = {0.2f, 0.2f};
    }

}

objectModule.newEntity(2, "IncomeSumText");
{
    auto tr = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
    tr->material = textMaterial;
    tr->mesh.font = josefin;
    tr->mesh.text = "Total income:";

    auto rect = objectModule.newEmptyComponentForLastEntity<RectTransform>();
        uiModule.rootNodes.push_back(rect);
        rect->getAnchorModifiable() = {0.0f, 0.5f};
        rect->getLocalPositionModifiable() = {45, -55};
        rect->getSizeModifiable() = {0.3f, 0.3f};
}

auto income = objectModule.newEntity(2, "AllIncomeText");
{
    auto tr = objectModule.newEmptyComponentForLastEntity<TextRenderer>();
    tr->material = textMaterial;
    tr->mesh.font = courier;
    tr->mesh.text = "0.00$";

    auto rect = objectModule.newEmptyComponentForLastEntity<RectTransform>();
        uiModule.rootNodes.push_back(rect);
        rect->getAnchorModifiable() = {0.0f, 0.5f};
        rect->getLocalPositionModifiable() = {55, -98};
        rect->getSizeModifiable() = {0.3f, 0.3f};
}

Core::cargoStorageSystem.initTexts(weight->getComponentPtr<TextRenderer>(), income->getComponentPtr<TextRenderer>(), group->getComponentPtr<UiSortingGroup>());